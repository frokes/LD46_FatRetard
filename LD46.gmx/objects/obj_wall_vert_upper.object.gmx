<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_wall_vert_upper</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_Wall_Parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Object variables
image_speed = 0;
image_index = 2;
open = false;

event_inherited();

bwx = 96;
bwy = 96;
box = 8;
boy = 20;
box5 = 24;   //15
boy5 = -28;   // 19
box6 = 8;   //15
boy6 = -28;   // 19
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Z Depth calculation
depth = obj_Player.y + y - 32;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Calculate shadows 
len = 2000;
if (distance_to_point(global.emitter_x,global.emitter_y) &lt; radius)
{
    x1 = x - box * image_xscale - global.emit_off_x;
    x2 = x + (bwx/2) * image_xscale - global.emit_off_x;
    x3 = x + (bwx/2) * image_xscale - global.emit_off_x;
    x4 = x + box * image_xscale - global.emit_off_x;
    x5 = x + box * image_xscale - global.emit_off_x;
    x6 = x - box * image_xscale - global.emit_off_x;
    
    y1 = y - bwy/2 - global.emit_off_y;
    y2 = y - bwy/2 - global.emit_off_y;
    y3 = y - bwy/2 + boy - global.emit_off_y;
    y4 = y - bwy/2 + boy - global.emit_off_y;
    y5 = y + bwy/2 - global.emit_off_y;
    y6 = y + bwy/2 - global.emit_off_y;
    
    dirc = point_direction(global.emitter_x,global.emitter_y,x1,y1);
    x11 = x1+lengthdir_x(len,dirc);
    y11 = y1+lengthdir_y(len,dirc);
    
    dirc = point_direction(global.emitter_x,global.emitter_y,x2,y2);
    x21 = x2+lengthdir_x(len,dirc);
    y21 = y2+lengthdir_y(len,dirc);
    
    dirc = point_direction(global.emitter_x,global.emitter_y,x3,y3);
    x31 = x3+lengthdir_x(len,dirc);
    y31 = y3+lengthdir_y(len,dirc);
    
    dirc = point_direction(global.emitter_x,global.emitter_y,x4,y4);
    x41 = x4+lengthdir_x(len,dirc);
    y41 = y4+lengthdir_y(len,dirc);
    
    dirc = point_direction(global.emitter_x,global.emitter_y,x5,y5);
    x51 = x5+lengthdir_x(len,dirc);
    y51 = y5+lengthdir_y(len,dirc);
    
    dirc = point_direction(global.emitter_x,global.emitter_y,x6,y6);
    x61 = x6+lengthdir_x(len,dirc);
    y61 = y6+lengthdir_y(len,dirc);
    
    
    draw_primitive_begin(pr_trianglestrip);
    draw_set_colour(global.shdwColor);
    draw_set_blend_mode(bm_normal);
    draw_set_alpha(1);
    draw_vertex(x1,y1);
    draw_vertex(x11,y11);
    draw_vertex(x2,y2);
    draw_vertex(x21,y21);
    draw_vertex(x3,y3);
    draw_vertex(x31,y31);
    draw_vertex(x4,y4);
    draw_vertex(x41,y41);
    draw_vertex(x5,y5);
    draw_vertex(x51,y51);
    draw_vertex(x6,y6);
    draw_vertex(x61,y61);
    draw_vertex(x1,y1);
    draw_vertex(x11,y11);

    draw_primitive_end();
    
    draw_set_colour(c_white);
    draw_set_alpha(1);
    draw_set_blend_mode(bm_normal);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>-1</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>24,40</point>
    <point>96,40</point>
    <point>96,96</point>
    <point>24,96</point>
  </PhysicsShapePoints>
</object>
